clear
setwd('/Users/saila/Desktop/Visualization_material')
pwd
pwd()
getwd()
read.csv("/Users/saila/Desktop/Visualization_material/210/210.txt"
)
networkInput <- as.matrix(read.csv("D:\\GNFS_modi\\CoExpress\\WGCNA_file\\VIS\\NewGeneSet\\322.txt", header= F, sep = "\t"))     ##Set path    #
netInCol1  <- as.matrix(paste(":", networkInput[,1],":", sep=""))#
netInCol2  <- as.matrix(paste(":", networkInput[,2],":", sep=""))#
netWeight <- as.data.frame(cbind(netInCol1, netInCol2, networkInput[,3]))
getwd()
setwd(paste("/Users/saila/Desktop/Visualization_material/lean_data/", 69)
)
setwd(paste("/Users/saila/Desktop/Visualization_material/lean_data/", 69))
setwd(paste("/Users/saila/Desktop/Visualization_material/lean_data/", "69"))
paste("/Users/saila/Desktop/Visualization_material/lean_data/", "69")
paste("/Users/saila/Desktop/Visualization_material/lean_data/"+"69")
paste("/Users/saila/Desktop/Visualization_material/lean_data/","69")
paste("/Users/saila/Desktop/Visualization_material/lean_data/","69", sep="")
setwd(paste("/Users/saila/Desktop/Visualization_material/lean_data/","69", sep=""))
setwd(paste("/Users/saila/Desktop/Visualization_material/lean_data/","64", sep=""))
mainDir <- "/Users/saila/Desktop/Visualization_material/lean_data/"
subDir <- "69"
subDir <- "64"
dir.create(file.path(mainDir, subDir))
networkInput <- as.matrix(read.csv("/Users/saila/Desktop/Visualization_material/GCN_353/192.txt", header= F, sep = "\t"))     ##Set path#
#REMOVE HEADER#
netInCol1  <- as.matrix(paste(":", networkInput[,1],":", sep=""))#
netInCol2  <- as.matrix(paste(":", networkInput[,2],":", sep=""))#
netWeight <- as.data.frame(cbind(netInCol1, netInCol2, networkInput[,3]))
setwd("/Users/Desktop/Visualization_material")
setwd("/Users/saila/Desktop/Visualization_material")
networkInput <- as.matrix(read.csv("/Users/saila/Desktop/Visualization_material/GCN_353/192.tsv", header= F, sep = "\t"))     ##Set path#
#REMOVE HEADER#
netInCol1  <- as.matrix(paste(":", networkInput[,1],":", sep=""))#
netInCol2  <- as.matrix(paste(":", networkInput[,2],":", sep=""))#
netWeight <- as.data.frame(cbind(netInCol1, netInCol2, networkInput[,3]))
inputSigList <- scan("/Users/saila/Desktop/Visualization_material/All_sig_gene_10072.txt", what="", sep="\n")	##Set path#
#Separate elements by one or more whitepace#
myList <- strsplit(inputSigList, "[[:space:]]+")#
#Extract the first vector element and set it as the list element name#
names(myList) <- sapply(myList, `[[`, 1)#
#Remove the first vector element from each list element#
myList <- lapply(myList, `[`, -1)
drawList <- 192#
myL <- myList[]#
nameGS<-names(myL)#
matName <- charmatch(drawList, nameGS)#
if(!is.na(matName)){#
	ml<- myList[[matName]]#
	mlm<-as.matrix(ml)#
}          #
sigG    <- as.matrix(paste(":", mlm[,1],":", sep=""))
FindExp <- function(sigG, netWeight,...){#
geneMatch <- NULL#
geneMatchSub <- NULL	#
	for (i in 1:nrow(netWeight)){	#
    match1 <- charmatch(netWeight[i,1], sigG[,1])#
		if(!is.na(match1)){				#
			match2 <- charmatch(netWeight[i,2], sigG[,1])	#
			if(!is.na(match2)){#
				a<-cbind(netWeight[i,],significant ="Sig-sig")#
				geneMatchSub <- rbind(geneMatchSub, a)				#
			}else{#
				a<-cbind(netWeight[i,],significant ="Sig-non")#
				geneMatchSub <- rbind(geneMatchSub, a)	#
			}			#
		}else{#
			match2 <- charmatch(netWeight[i,2], sigG[,1])#
			if(!is.na(match2)){#
				a<-cbind(netWeight[i,],significant ="Sig-non")  #Should label "Non-sig" but it is categorized into same group as "Sig-non" #
				geneMatchSub <- rbind(geneMatchSub, a)				#
			}else{#
				a<-cbind(netWeight[i,],significant ="Non-non")#
				geneMatchSub <- rbind(geneMatchSub, a)	#
			}#
		}				#
	}#
	return(geneMatchSub)#
}#
fg<-FindExp(sigG, netWeight)#
fg <- as.matrix(fg)#
fgc <-gsub(":", "", fg)#
#create new file containing lean_data#
## maybe create new directory#
#mainDir <- "/Users/saila/Desktop/Visualization_material/lean_data/"#
#subDir <- "64"#
#dir.create(file.path(mainDir, subDir))#
# https://stackoverflow.com/questions/4216753/check-existence-of-directory-and-create-if-doesnt-exist#
mainDir <- "/Users/saila/Desktop/Visualization_material/lean_data/"#
subDir <- drawList#
dir.create(file.path(mainDir, subDir))#
write.table(fgc, file = paste("/Users/saila/Desktop/Visualization_material/lean_data/", drawList, "/", drawList, "_sig-non.txt", sep =""),#
	row.names = F, col.names = c("Gene1", "Gene2", "Weight", "Significant"), sep ="\t")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
myGraph <- read.table("/Users/saila/Desktop/Visualization_material/lean_data/192/192_sig-non.txt", header = T)	##Set path#
##To count the number of each group (frequency table)#
table(myGraph$Significant)
qplot(No, Weight, colour = Significant, data = myGraph, #
	main=" Dissimilarity between gene pair of GCN of MAPK signaling pathway", xlab="Gene-pair", ylab="Weight")
qplot(Significant, Weight, colour = Significant, data = myGraph, #
	main=" Dissimilarity between gene pair of GCN of Apoptosis signaling", xlab="Gene-pair", ylab="Weight")
p <- qplot(Significant, Weight, colour = Significant, data = myGraph, #
	main=" Dissimilarity between gene pair of GCN of Apoptosis signaling", xlab="Gene-pair", ylab="Weight") #
p+theme(legend.text=element_text(size=12))
